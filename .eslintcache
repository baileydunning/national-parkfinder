[{"/Users/bailey/turing/3mod/projects/national-parkfinder/src/index.js":"1","/Users/bailey/turing/3mod/projects/national-parkfinder/src/App/App.tsx":"2","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkData.js":"3","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkContainer/ParkContainer.tsx":"4","/Users/bailey/turing/3mod/projects/national-parkfinder/src/MainNav/MainNav.tsx":"5","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkContainer/npsApiCall.js":"6","/Users/bailey/turing/3mod/projects/national-parkfinder/src/Banner/Banner.tsx":"7","/Users/bailey/turing/3mod/projects/national-parkfinder/src/NavSearch/NavSearch.tsx":"8","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkInfo/ParkInfo.tsx":"9","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkList/ParkList.tsx":"10","/Users/bailey/turing/3mod/projects/national-parkfinder/src/UserNav/UserNav.tsx":"11","/Users/bailey/turing/3mod/projects/national-parkfinder/src/BannerIcons/BannerIcons.tsx":"12","/Users/bailey/turing/3mod/projects/national-parkfinder/src/About/About.tsx":"13","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkBtn/ParkBtn.tsx":"14"},{"size":292,"mtime":1610057266676,"results":"15","hashOfConfig":"16"},{"size":1005,"mtime":1610057266673,"results":"17","hashOfConfig":"16"},{"size":43161,"mtime":1610057039943,"results":"18","hashOfConfig":"16"},{"size":1104,"mtime":1610059913099,"results":"19","hashOfConfig":"16"},{"size":871,"mtime":1610057266674,"results":"20","hashOfConfig":"16"},{"size":264,"mtime":1610057266675,"results":"21","hashOfConfig":"16"},{"size":754,"mtime":1610059632924,"results":"22","hashOfConfig":"16"},{"size":302,"mtime":1610057039942,"results":"23","hashOfConfig":"16"},{"size":620,"mtime":1610059844363,"results":"24","hashOfConfig":"16"},{"size":823,"mtime":1610057266676,"results":"25","hashOfConfig":"16"},{"size":222,"mtime":1610057039945,"results":"26","hashOfConfig":"16"},{"size":895,"mtime":1610057039939,"results":"27","hashOfConfig":"16"},{"size":216,"mtime":1610057039938,"results":"28","hashOfConfig":"16"},{"size":590,"mtime":1610057266674,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"2r4utd",{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},"/Users/bailey/turing/3mod/projects/national-parkfinder/src/index.js",[],["64","65"],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/App/App.tsx",["66","67","68"],"import './App.scss'\nimport React, { useState, useEffect } from 'react'\nimport MainNav from '../MainNav/MainNav'\nimport ParkContainer from '../ParkContainer/ParkContainer'\n// import { Route } from 'react-router-dom'\nimport { nationalParks } from '../ParkData'\nimport { parkRequest } from '../ParkContainer/npsApiCall'\n\ninterface ChoosePark {\n  choosePark: (parkCode: string) => void\n}\n\ninterface Park {\n  parkCode: string;\n}\n\nconst App: React.FC = () => {\n  const [parkCode, setParkCode] = useState('')\n  \n  const choosePark = (parkCodeId: string) => {\n   setParkCode(parkCodeId)\n  }\n\n  const generateRandomParkCode = () => {\n    let index = Math.floor(Math.random() * nationalParks.length)\n    setParkCode(nationalParks[index].parkCode)\n  }\n\n  useEffect(() => {\n    if (parkCode === '') {\n      generateRandomParkCode()\n    }\n  }, [parkCode])\n\n  return (\n    <main className=\"body\">\n      <MainNav choosePark={choosePark}/>\n      <ParkContainer parkCode={parkCode}/>\n    </main>\n  )\n}\n\nexport default App\n",["69","70"],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkData.js",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkContainer/ParkContainer.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/MainNav/MainNav.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkContainer/npsApiCall.js",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/Banner/Banner.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/NavSearch/NavSearch.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkInfo/ParkInfo.tsx",["71"],"import './ParkInfo.scss'\nimport About from '../About/About'\nimport { CurrentPark, Name, CurrentParkContainer, Images, ImageObject } from '../ParkContainer/interfaces'\n\ntype ParkInfoProps = CurrentPark | CurrentParkContainer | Name | Images | ImageObject\n\nconst ParkInfo: React.FC<ParkInfoProps> = props => {\n    const { currentPark } = props as CurrentParkContainer\n    return (\n        <section>\n            {/* <About /> */}\n            <p><b>About {currentPark.name}:</b>{currentPark.description}</p>\n            <p><b>Weather Info:</b>{currentPark.weatherInfo}</p>\n        </section>\n    )\n}\n\nexport default ParkInfo","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkList/ParkList.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/UserNav/UserNav.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/BannerIcons/BannerIcons.tsx",["72","73"],"import './BannerIcons.scss'\nimport bucketBlack from './icons/bucket-black.png'\nimport bucketGreen from './icons/bucket-green.png'\nimport checkBlack from './icons/check-black.png'\nimport checkGreen from './icons/check-green.png'\n\nfunction BannerIcons() {\n    return (\n        <section className=\"banner-icons\">\n            <div className=\"banner-btn-container\">\n            <img \n                src={checkBlack}\n                alt=\"not checked\"\n                className=\"saved-icon\"\n            />\n            <h2>Add To Visited</h2>\n            </div>\n            <div className=\"banner-btn-container\">\n                <img\n                    src={bucketBlack}\n                    alt=\"not added to bucket list\"\n                    className=\"saved-icon\"\n                />\n                <h2>Add To Bucket List</h2>\n            </div>\n        </section>\n    )\n}\n\nexport default BannerIcons","/Users/bailey/turing/3mod/projects/national-parkfinder/src/About/About.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkBtn/ParkBtn.tsx",["74","75"],"import './ParkBtn.scss'\n\ninterface Park { \n  name: string\n  parkCode: string\n  image: string\n  state: string\n}\n\ninterface ChoosePark {\n  choosePark: (parkCode: string) => void;\n}\n\ntype ParkBtnProps = Park | ChoosePark\n\nconst ParkBtn: React.FC<ParkBtnProps> = props => {\n  const { name } = props as Park\n  const { state } = props as Park\n  const { parkCode } = props as Park\n  const { image } = props as Park\n  const { choosePark } = props as ChoosePark\n    return (\n        <button className=\"park-button\" onClick={() => choosePark(parkCode)}>{name}</button>\n    )\n}\n\nexport default ParkBtn",{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":7,"column":10,"nodeType":"82","messageId":"83","endLine":7,"endColumn":21},{"ruleId":"80","severity":1,"message":"84","line":9,"column":11,"nodeType":"82","messageId":"83","endLine":9,"endColumn":21},{"ruleId":"80","severity":1,"message":"85","line":13,"column":11,"nodeType":"82","messageId":"83","endLine":13,"endColumn":15},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"86","line":2,"column":8,"nodeType":"82","messageId":"83","endLine":2,"endColumn":13},{"ruleId":"80","severity":1,"message":"87","line":3,"column":8,"nodeType":"82","messageId":"83","endLine":3,"endColumn":19},{"ruleId":"80","severity":1,"message":"88","line":5,"column":8,"nodeType":"82","messageId":"83","endLine":5,"endColumn":18},{"ruleId":"80","severity":1,"message":"89","line":18,"column":11,"nodeType":"82","messageId":"83","endLine":18,"endColumn":16},{"ruleId":"80","severity":1,"message":"90","line":20,"column":11,"nodeType":"82","messageId":"83","endLine":20,"endColumn":16},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"@typescript-eslint/no-unused-vars","'parkRequest' is defined but never used.","Identifier","unusedVar","'ChoosePark' is defined but never used.","'Park' is defined but never used.","'About' is defined but never used.","'bucketGreen' is defined but never used.","'checkGreen' is defined but never used.","'state' is assigned a value but never used.","'image' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]