[{"/Users/bailey/turing/3mod/projects/national-parkfinder/src/index.js":"1","/Users/bailey/turing/3mod/projects/national-parkfinder/src/App/App.tsx":"2","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkData.js":"3","/Users/bailey/turing/3mod/projects/national-parkfinder/src/MainNav/MainNav.tsx":"4","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkContainer/ParkContainer.tsx":"5","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkContainer/npsApiCall.js":"6","/Users/bailey/turing/3mod/projects/national-parkfinder/src/NavSearch/NavSearch.tsx":"7","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkList/ParkList.tsx":"8","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkBtn/ParkBtn.tsx":"9","/Users/bailey/turing/3mod/projects/national-parkfinder/src/UserNav/UserNav.tsx":"10","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkInfo/ParkInfo.tsx":"11","/Users/bailey/turing/3mod/projects/national-parkfinder/src/Banner/Banner.tsx":"12","/Users/bailey/turing/3mod/projects/national-parkfinder/src/Location/Location.tsx":"13","/Users/bailey/turing/3mod/projects/national-parkfinder/src/BannerIcons/BannerIcons.tsx":"14","/Users/bailey/turing/3mod/projects/national-parkfinder/src/About/About.tsx":"15","/Users/bailey/turing/3mod/projects/national-parkfinder/src/Contact/Contact.tsx":"16"},{"size":322,"mtime":1610138614066,"results":"17","hashOfConfig":"18"},{"size":1283,"mtime":1610155658049,"results":"19","hashOfConfig":"18"},{"size":11659,"mtime":1610067659096,"results":"20","hashOfConfig":"18"},{"size":2348,"mtime":1610156110257,"results":"21","hashOfConfig":"18"},{"size":1627,"mtime":1610154715136,"results":"22","hashOfConfig":"18"},{"size":264,"mtime":1610156283089,"results":"23","hashOfConfig":"18"},{"size":747,"mtime":1610155065490,"results":"24","hashOfConfig":"18"},{"size":718,"mtime":1610156391199,"results":"25","hashOfConfig":"18"},{"size":638,"mtime":1610138614063,"results":"26","hashOfConfig":"18"},{"size":663,"mtime":1610138614065,"results":"27","hashOfConfig":"18"},{"size":1300,"mtime":1610154718944,"results":"28","hashOfConfig":"18"},{"size":615,"mtime":1610154796393,"results":"29","hashOfConfig":"18"},{"size":681,"mtime":1610142697115,"results":"30","hashOfConfig":"18"},{"size":895,"mtime":1610057039939,"results":"31","hashOfConfig":"18"},{"size":635,"mtime":1610154718941,"results":"32","hashOfConfig":"18"},{"size":1143,"mtime":1610154718943,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"2r4utd",{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/Users/bailey/turing/3mod/projects/national-parkfinder/src/index.js",[],["72","73"],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/App/App.tsx",["74","75"],"import './App.scss'\nimport React, { useState, useEffect } from 'react'\nimport MainNav from '../MainNav/MainNav'\nimport ParkContainer from '../ParkContainer/ParkContainer'\nimport { Route, Switch, useLocation } from 'react-router-dom'\nimport { nationalParks } from '../ParkData'\nimport { parkRequest } from '../ParkContainer/npsApiCall'\n\nconst App: React.FC = () => {\n  const [parkCode, setParkCode] = useState('')\n  const location = useLocation()\n  const choosePark = (parkCodeId: string) => {\n   setParkCode(parkCodeId)\n  }\n\n  useEffect(() => {\n    if (location.pathname === '/') {\n      generateRandomParkCode()\n    } else {\n      setParkCode(location.pathname.split('/')[1])\n    }\n  }, [parkCode])\n\n  const generateRandomParkCode = (): void => {\n    let index = Math.floor(Math.random() * nationalParks.length)\n    setParkCode(nationalParks[index].parkCode)\n  }\n\n  return (\n    <main className=\"body\">\n      <MainNav \n        choosePark={choosePark}\n        generateRandomParkCode={generateRandomParkCode}/>\n      <Switch>\n        <Route\n          path={location.pathname}\n          render={ () => {\n            return (\n              <ParkContainer \n                parkCode={parkCode}/>\n            )\n          }}\n        />\n      </Switch>\n    </main>\n  )\n}\n\nexport default App\n",["76","77"],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkData.js",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/MainNav/MainNav.tsx",["78","79"],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkContainer/ParkContainer.tsx",["80","81"],"import { useState, useEffect, Fragment } from 'react'\nimport Banner from '../Banner/Banner'\nimport UserNav from '../UserNav/UserNav'\nimport ParkInfo from '../ParkInfo/ParkInfo'\nimport SavedParks from '../SavedParks/SavedParks'\nimport { ParkCode, CurrentPark } from '../interfaces'\nimport { parkRequest } from './npsApiCall'\nimport { Switch, Route } from 'react-router-dom'\nimport './ParkContainer.scss'\nimport { nationalParks } from '../ParkData'\n\n\ntype ParkContainerProps = ParkCode | CurrentPark\n\nconst ParkContainer: React.FC<ParkContainerProps> = props => {\n\n  const [currentPark, setCurrentPark] = useState<CurrentPark>()\n  const { parkCode } = props as ParkCode\n  \n  useEffect(() => {\n    if (parkCode !== '') {\n      parkRequest(parkCode)\n      .then(data => {\n        setCurrentPark(data.data[0])\n      })    \n      .catch(error => setCurrentPark(error.message))\n    } \n  }, [parkCode])\n\n  return (\n    <section>\n      {currentPark && \n        <Switch>\n          <Fragment>\n            <Banner \n              currentPark={currentPark} />\n            <UserNav \n              currentPark={currentPark} />\n            <Route \n              path={`/${currentPark.parkCode}`}\n              render={() => {\n                return (\n                  <ParkInfo \n                  currentPark={currentPark} />\n                )\n              }}\n            />\n              {/* <Route\n                path='/:savedParks'\n                render={props => {\n                  <SavedParks />\n                }}\n              /> */}\n          </Fragment>\n        </Switch>\n      }\n    </section>\n  )\n}\n\nexport default ParkContainer","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkContainer/npsApiCall.js",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/NavSearch/NavSearch.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkList/ParkList.tsx",["82"],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkBtn/ParkBtn.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/UserNav/UserNav.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkInfo/ParkInfo.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/Banner/Banner.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/Location/Location.tsx",["83"],"import { CurrentParkContainer } from '../interfaces'\nimport './Location.scss'\n\nconst Location: React.FC<CurrentParkContainer> = props => {\n  const { currentPark } = props as CurrentParkContainer \n    return (\n      <section>\n        <p><b>Driving directions to {currentPark.name}: </b>{currentPark.directionsInfo}</p>\n        <iframe \n            src={`https://www.google.com/maps/embed?pb=!1m14!1m12!1m3!1d196281.64169563106!2d${currentPark.longitude}!3d${currentPark.latitude}!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!5e0!3m2!1sen!2sus!4v1610139788967!5m2!1sen!2sus`} \n            width = \"800\" height = \"200\">\n        </iframe >\n      </section>\n    )\n}\n\nexport default Location\n","/Users/bailey/turing/3mod/projects/national-parkfinder/src/BannerIcons/BannerIcons.tsx",["84","85"],"import './BannerIcons.scss'\nimport bucketBlack from './icons/bucket-black.png'\nimport bucketGreen from './icons/bucket-green.png'\nimport checkBlack from './icons/check-black.png'\nimport checkGreen from './icons/check-green.png'\n\nfunction BannerIcons() {\n    return (\n        <section className=\"banner-icons\">\n            <div className=\"banner-btn-container\">\n            <img \n                src={checkBlack}\n                alt=\"not checked\"\n                className=\"saved-icon\"\n            />\n            <h2>Add To Visited</h2>\n            </div>\n            <div className=\"banner-btn-container\">\n                <img\n                    src={bucketBlack}\n                    alt=\"not added to bucket list\"\n                    className=\"saved-icon\"\n                />\n                <h2>Add To Bucket List</h2>\n            </div>\n        </section>\n    )\n}\n\nexport default BannerIcons","/Users/bailey/turing/3mod/projects/national-parkfinder/src/About/About.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/Contact/Contact.tsx",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":7,"column":10,"nodeType":"92","messageId":"93","endLine":7,"endColumn":21},{"ruleId":"94","severity":1,"message":"95","line":22,"column":6,"nodeType":"96","endLine":22,"endColumn":16,"suggestions":"97"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"98","line":22,"column":11,"nodeType":"92","messageId":"93","endLine":22,"endColumn":25},{"ruleId":"94","severity":1,"message":"99","line":38,"column":6,"nodeType":"96","endLine":38,"endColumn":18,"suggestions":"100"},{"ruleId":"90","severity":1,"message":"101","line":5,"column":8,"nodeType":"92","messageId":"93","endLine":5,"endColumn":18},{"ruleId":"90","severity":1,"message":"102","line":10,"column":10,"nodeType":"92","messageId":"93","endLine":10,"endColumn":23},{"ruleId":"90","severity":1,"message":"103","line":3,"column":11,"nodeType":"92","messageId":"93","endLine":3,"endColumn":21},{"ruleId":"104","severity":1,"message":"105","line":9,"column":9,"nodeType":"106","endLine":11,"endColumn":42},{"ruleId":"90","severity":1,"message":"107","line":3,"column":8,"nodeType":"92","messageId":"93","endLine":3,"endColumn":19},{"ruleId":"90","severity":1,"message":"108","line":5,"column":8,"nodeType":"92","messageId":"93","endLine":5,"endColumn":18},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"@typescript-eslint/no-unused-vars","'parkRequest' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'location.pathname'. Either include it or remove the dependency array.","ArrayExpression",["111"],"'ParksOnDisplay' is defined but never used.","React Hook useEffect has a missing dependency: 'createNavBtns'. Either include it or remove the dependency array.",["112"],"'SavedParks' is defined but never used.","'nationalParks' is defined but never used.","'ChoosePark' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'bucketGreen' is defined but never used.","'checkGreen' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},"Update the dependencies array to be: [location.pathname, parkCode]",{"range":"117","text":"118"},"Update the dependencies array to be: [createNavBtns, nameSearch]",{"range":"119","text":"120"},[688,698],"[location.pathname, parkCode]",[1106,1118],"[createNavBtns, nameSearch]"]