[{"/Users/bailey/turing/3mod/projects/national-parkfinder/src/index.js":"1","/Users/bailey/turing/3mod/projects/national-parkfinder/src/App/App.tsx":"2","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkData.js":"3","/Users/bailey/turing/3mod/projects/national-parkfinder/src/MainNav/MainNav.tsx":"4","/Users/bailey/turing/3mod/projects/national-parkfinder/src/Footer/Footer.tsx":"5","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkContainer/ParkContainer.tsx":"6","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkContainer/npsApiCall.js":"7","/Users/bailey/turing/3mod/projects/national-parkfinder/src/NavSearch/NavSearch.tsx":"8","/Users/bailey/turing/3mod/projects/national-parkfinder/src/UserNav/UserNav.tsx":"9","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkInfo/ParkInfo.tsx":"10","/Users/bailey/turing/3mod/projects/national-parkfinder/src/SavedParks/SavedParks.tsx":"11","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkList/ParkList.tsx":"12","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkBtn/ParkBtn.tsx":"13","/Users/bailey/turing/3mod/projects/national-parkfinder/src/Banner/Banner.tsx":"14","/Users/bailey/turing/3mod/projects/national-parkfinder/src/About/About.tsx":"15","/Users/bailey/turing/3mod/projects/national-parkfinder/src/Contact/Contact.tsx":"16","/Users/bailey/turing/3mod/projects/national-parkfinder/src/Location/Location.tsx":"17","/Users/bailey/turing/3mod/projects/national-parkfinder/src/BannerIcons/BannerIcons.tsx":"18","/Users/bailey/turing/3mod/projects/national-parkfinder/src/SavedCard/SavedCard.tsx":"19","/Users/bailey/turing/3mod/projects/national-parkfinder/src/StateDropdown/StateDropdown.tsx":"20"},{"size":323,"mtime":1610303893238,"results":"21","hashOfConfig":"22"},{"size":1404,"mtime":1610303893219,"results":"23","hashOfConfig":"22"},{"size":15785,"mtime":1610399277048,"results":"24","hashOfConfig":"22"},{"size":2622,"mtime":1610410687926,"results":"25","hashOfConfig":"22"},{"size":576,"mtime":1610399277046,"results":"26","hashOfConfig":"22"},{"size":4164,"mtime":1610303893229,"results":"27","hashOfConfig":"22"},{"size":264,"mtime":1610303893229,"results":"28","hashOfConfig":"22"},{"size":684,"mtime":1610410773663,"results":"29","hashOfConfig":"22"},{"size":589,"mtime":1610303893237,"results":"30","hashOfConfig":"22"},{"size":1904,"mtime":1610307427125,"results":"31","hashOfConfig":"22"},{"size":1624,"mtime":1610303893235,"results":"32","hashOfConfig":"22"},{"size":836,"mtime":1610399277049,"results":"33","hashOfConfig":"22"},{"size":683,"mtime":1610399277047,"results":"34","hashOfConfig":"22"},{"size":920,"mtime":1610399277044,"results":"35","hashOfConfig":"22"},{"size":684,"mtime":1610303893218,"results":"36","hashOfConfig":"22"},{"size":1122,"mtime":1610303893222,"results":"37","hashOfConfig":"22"},{"size":643,"mtime":1610303893225,"results":"38","hashOfConfig":"22"},{"size":2496,"mtime":1610399277045,"results":"39","hashOfConfig":"22"},{"size":1473,"mtime":1610399277050,"results":"40","hashOfConfig":"22"},{"size":3144,"mtime":1610410811880,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"2r4utd",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/bailey/turing/3mod/projects/national-parkfinder/src/index.js",[],["88","89"],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/App/App.tsx",["90"],"import './App.scss'\nimport React, { useState, useEffect } from 'react'\nimport MainNav from '../MainNav/MainNav'\nimport ParkContainer from '../ParkContainer/ParkContainer'\nimport Footer from '../Footer/Footer'\nimport { Route, Switch, useLocation } from 'react-router-dom'\nimport { nationalParks } from '../ParkData'\n\nconst App: React.FC = () => {\n  const [parkCode, setParkCode] = useState<string>('')\n  const location = useLocation()\n  const choosePark = (parkCodeId: string) => {\n    setParkCode(parkCodeId)\n  }\n\n  useEffect(() => {\n    if (location.pathname === '/') {\n      generateRandomParkCode()\n      location.pathname = `/${parkCode}`\n    } else {\n      setParkCode(location.pathname.split('/')[1])\n    }\n  }, [parkCode])\n\n  const generateRandomParkCode = (): void => {\n      let index = Math.floor(Math.random() * nationalParks.length)\n      setParkCode(nationalParks[index].parkCode)\n  }\n\n  return (\n    <main className='app'>\n      <body className='body'>\n        <MainNav\n          choosePark={choosePark}\n          generateRandomParkCode={generateRandomParkCode} />\n        <Switch>\n          <Route\n            path={location.pathname}\n            render={() => {\n              return (\n                <ParkContainer\n                  parkCode={parkCode} />\n              )\n            }}\n          />\n        </Switch>\n      </body>\n      <Footer />\n    </main>\n  )\n}\n\nexport default App\n",["91","92"],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkData.js",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/MainNav/MainNav.tsx",["93"],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/Footer/Footer.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkContainer/ParkContainer.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkContainer/npsApiCall.js",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/NavSearch/NavSearch.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/UserNav/UserNav.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkInfo/ParkInfo.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/SavedParks/SavedParks.tsx",["94"],"import { useEffect, useState } from 'react'\nimport { LocalParkContainer, LocalParkData, AddRemoveFunctionality } from '../interfaces'\nimport SavedCard from '../SavedCard/SavedCard'\nimport { useLocation } from 'react-router-dom'\n\nconst SavedParks: React.FC<LocalParkContainer & AddRemoveFunctionality> = props => {\n  const location = useLocation()\n  const { visitedList, bucketList } = props as LocalParkContainer\n  const { addToVisited, deleteFromVisited, addToBucketList, deleteFromBucketList } = props as AddRemoveFunctionality\n  const [visitedListDisplay, setVisitedListDisplay] = useState<Array<JSX.Element>>([])\n\n  useEffect(() => {\n    let parkList = []\n    if (location.pathname === '/user/visited') {\n      parkList = visitedList\n    } else if (location.pathname === '/user/bucket-list') {\n      parkList = bucketList\n    }\n      const visitedCards = parkList.map((savedPark: LocalParkData) => {\n        return <SavedCard\n          key={savedPark.parkCode}\n          name={savedPark.name}\n          image={savedPark.image}\n          parkCode={savedPark.parkCode}\n          state={savedPark.state}\n          bucketList={savedPark.bucketList}\n          visited={savedPark.visited}\n          addToVisited={addToVisited}\n          deleteFromVisited={deleteFromVisited}\n          addToBucketList={addToBucketList}\n          deleteFromBucketList={deleteFromBucketList}\n        />\n      })\n      setVisitedListDisplay(visitedCards)\n  }, [visitedList])\n\n  return (\n    <section id={location.pathname === '/user/visited' ? \"visited\" : \"bucket-list\"}>\n      {visitedListDisplay}\n    </section>\n  )\n}\n\nexport default SavedParks","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkList/ParkList.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkBtn/ParkBtn.tsx",["95"],"import './ParkBtn.scss'\nimport { LocalParkData } from '../interfaces'\nimport { Link } from 'react-router-dom'\n\ninterface ChoosePark {\n  choosePark: (parkCode: string) => void;\n}\n\ntype ParkBtnProps = LocalParkData | ChoosePark\n\nconst ParkBtn: React.FC<ParkBtnProps> = props => {\n  const { name } = props as LocalParkData\n  const { parkCode } = props as LocalParkData\n  const { choosePark } = props as ChoosePark\n  return (\n    <Link\n      data-testid={`${parkCode} button`}\n      to={`/${parkCode}/about`}>\n      <button\n        role=\"button\"\n        className=\"park-button\"\n        onClick={() => choosePark(parkCode)}\n      >{name}</button>\n    </Link>\n  )\n}\n\nexport default ParkBtn","/Users/bailey/turing/3mod/projects/national-parkfinder/src/Banner/Banner.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/About/About.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/Contact/Contact.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/Location/Location.tsx",["96"],"import { CurrentParkContainer } from '../interfaces'\nimport './Location.scss'\n\nconst Location: React.FC<CurrentParkContainer> = props => {\n  const { currentPark } = props as CurrentParkContainer\n  return (\n    <section>\n      <p><b>Driving directions to {currentPark.name}: </b>{currentPark.directionsInfo}</p>\n      <iframe\n        src={`https://www.google.com/maps/embed?pb=!1m14!1m12!1m3!1d196281.64169563106!2d${currentPark.longitude}!3d${currentPark.latitude}!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!5e0!3m2!1sen!2sus!4v1610139788967!5m2!1sen!2sus`}\n        className='map'>\n      </iframe >\n    </section>\n  )\n}\n\nexport default Location\n","/Users/bailey/turing/3mod/projects/national-parkfinder/src/BannerIcons/BannerIcons.tsx",["97"],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/SavedCard/SavedCard.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/StateDropdown/StateDropdown.tsx",["98"],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":23,"column":6,"nodeType":"105","endLine":23,"endColumn":16,"suggestions":"106"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"107","line":34,"column":6,"nodeType":"105","endLine":34,"endColumn":34,"suggestions":"108"},{"ruleId":"103","severity":1,"message":"109","line":35,"column":6,"nodeType":"105","endLine":35,"endColumn":19,"suggestions":"110"},{"ruleId":"111","severity":1,"message":"112","line":19,"column":7,"nodeType":"113","endLine":23,"endColumn":8},{"ruleId":"114","severity":1,"message":"115","line":9,"column":7,"nodeType":"113","endLine":11,"endColumn":25},{"ruleId":"103","severity":1,"message":"116","line":22,"column":3,"nodeType":"117","endLine":22,"endColumn":12,"suggestions":"118"},{"ruleId":"119","severity":1,"message":"120","line":6,"column":10,"nodeType":"117","messageId":"121","endLine":6,"endColumn":24},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'location'. Either include it or remove the dependency array.","ArrayExpression",["124"],"React Hook useEffect has a missing dependency: 'filterButtons'. Either include it or remove the dependency array.",["125"],"React Hook useEffect has missing dependencies: 'addToBucketList', 'addToVisited', 'bucketList', 'deleteFromBucketList', 'deleteFromVisited', and 'location.pathname'. Either include them or remove the dependency array.",["126"],"jsx-a11y/no-redundant-roles","The element button has an implicit role of button. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","React Hook useEffect contains a call to 'setCheckColor'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [localPark.visited, localPark.bucketList] as a second argument to the useEffect Hook.","Identifier",["127"],"@typescript-eslint/no-unused-vars","'stateSelection' is assigned a value but never used.","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},"Update the dependencies array to be: [location, parkCode]",{"range":"136","text":"137"},"Update the dependencies array to be: [filterButtons, nameSearch, stateSelection]",{"range":"138","text":"139"},"Update the dependencies array to be: [addToBucketList, addToVisited, bucketList, deleteFromBucketList, deleteFromVisited, location.pathname, visitedList]",{"range":"140","text":"141"},"Add dependencies array: [localPark.visited, localPark.bucketList]",{"range":"142","text":"143"},[718,728],"[location, parkCode]",[1187,1215],"[filterButtons, nameSearch, stateSelection]",[1438,1451],"[addToBucketList, addToVisited, bucketList, deleteFromBucketList, deleteFromVisited, location.pathname, visitedList]",[1127,1127],", [localPark.visited, localPark.bucketList]"]