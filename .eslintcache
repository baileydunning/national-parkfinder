[{"/Users/bailey/turing/3mod/projects/national-parkfinder/src/index.js":"1","/Users/bailey/turing/3mod/projects/national-parkfinder/src/App/App.tsx":"2","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkData.js":"3","/Users/bailey/turing/3mod/projects/national-parkfinder/src/Footer/Footer.tsx":"4","/Users/bailey/turing/3mod/projects/national-parkfinder/src/MainNav/MainNav.tsx":"5","/Users/bailey/turing/3mod/projects/national-parkfinder/src/SavedParks/SavedParks.tsx":"6","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkContainer/ParkContainer.tsx":"7","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkContainer/npsApiCall.js":"8","/Users/bailey/turing/3mod/projects/national-parkfinder/src/NavSearch/NavSearch.tsx":"9","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkList/ParkList.tsx":"10","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkBtn/ParkBtn.tsx":"11","/Users/bailey/turing/3mod/projects/national-parkfinder/src/SavedCard/SavedCard.tsx":"12","/Users/bailey/turing/3mod/projects/national-parkfinder/src/UserNav/UserNav.tsx":"13","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkInfo/ParkInfo.tsx":"14","/Users/bailey/turing/3mod/projects/national-parkfinder/src/StateDropdown/StateDropdown.tsx":"15","/Users/bailey/turing/3mod/projects/national-parkfinder/src/Banner/Banner.tsx":"16","/Users/bailey/turing/3mod/projects/national-parkfinder/src/About/About.tsx":"17","/Users/bailey/turing/3mod/projects/national-parkfinder/src/Contact/Contact.tsx":"18","/Users/bailey/turing/3mod/projects/national-parkfinder/src/Location/Location.tsx":"19","/Users/bailey/turing/3mod/projects/national-parkfinder/src/BannerIcons/BannerIcons.tsx":"20"},{"size":269,"mtime":1611863458354,"results":"21","hashOfConfig":"22"},{"size":5639,"mtime":1611874049647,"results":"23","hashOfConfig":"22"},{"size":15836,"mtime":1611863458348,"results":"24","hashOfConfig":"22"},{"size":518,"mtime":1610472195885,"results":"25","hashOfConfig":"22"},{"size":2476,"mtime":1611874193245,"results":"26","hashOfConfig":"22"},{"size":1788,"mtime":1611863458352,"results":"27","hashOfConfig":"22"},{"size":1848,"mtime":1611863458347,"results":"28","hashOfConfig":"22"},{"size":264,"mtime":1610303893229,"results":"29","hashOfConfig":"22"},{"size":684,"mtime":1610494900968,"results":"30","hashOfConfig":"22"},{"size":836,"mtime":1610399277049,"results":"31","hashOfConfig":"22"},{"size":536,"mtime":1611874049651,"results":"32","hashOfConfig":"22"},{"size":1465,"mtime":1611863458350,"results":"33","hashOfConfig":"22"},{"size":604,"mtime":1611863458353,"results":"34","hashOfConfig":"22"},{"size":1919,"mtime":1611863458349,"results":"35","hashOfConfig":"22"},{"size":3251,"mtime":1611863458352,"results":"36","hashOfConfig":"22"},{"size":1797,"mtime":1611874049647,"results":"37","hashOfConfig":"22"},{"size":684,"mtime":1610303893218,"results":"38","hashOfConfig":"22"},{"size":1274,"mtime":1611874049650,"results":"39","hashOfConfig":"22"},{"size":729,"mtime":1611874049650,"results":"40","hashOfConfig":"22"},{"size":2539,"mtime":1611874049648,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"2r4utd",{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"51"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/bailey/turing/3mod/projects/national-parkfinder/src/index.js",[],["85","86"],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/App/App.tsx",["87","88","89","90","91"],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkData.js",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/Footer/Footer.tsx",[],["92","93"],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/MainNav/MainNav.tsx",["94"],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/SavedParks/SavedParks.tsx",["95"],"import { useEffect, useState } from 'react'\nimport { LocalParkContainer, LocalParkData, AddRemoveFunctionality } from '../interfaces'\nimport SavedCard from '../SavedCard/SavedCard'\nimport { useLocation } from 'react-router-dom'\nimport './SavedParks.scss'\n\ntype SavedParksProps = LocalParkContainer & AddRemoveFunctionality\n\nconst SavedParks: React.FC<SavedParksProps> = props => {\n  const [pageTitle, setPageTitle] = useState<string>('')\n  const location = useLocation()\n  const [parkList, setParkList] = useState<Array<any>>([])\n  const { visitedList, bucketList } = props as LocalParkContainer\n  const { addToVisited, deleteFromVisited, addToBucketList, deleteFromBucketList } = props as AddRemoveFunctionality\n\n  useEffect(() => {\n    if (location.pathname === '/user/visited') {\n      setParkList(visitedList)\n      setPageTitle('My Visited Parks')\n    } else if (location.pathname === '/user/bucket-list') {\n      setParkList(bucketList)\n      setPageTitle('My Bucket List Parks')\n    }\n  })\n  \n  const createCards = () => {\n    return parkList.map((savedPark: LocalParkData) => {\n      return <SavedCard\n        key={savedPark.parkCode}\n        name={savedPark.name}\n        image={savedPark.image}\n        parkCode={savedPark.parkCode}\n        state={savedPark.state}\n        bucketList={savedPark.bucketList}\n        visited={savedPark.visited}\n        addToVisited={addToVisited}\n        deleteFromVisited={deleteFromVisited}\n        addToBucketList={addToBucketList}\n        deleteFromBucketList={deleteFromBucketList}\n      />\n    })\n  }\n\n  return (\n    <section>\n      <h1 style={{textAlign: \"center\"}}>\n        {pageTitle}\n      </h1>\n      <section className=\"saved-parks-container\">\n        { createCards() }\n      </section>\n    </section>\n  )\n}\n\nexport default SavedParks","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkContainer/ParkContainer.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkContainer/npsApiCall.js",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/NavSearch/NavSearch.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkList/ParkList.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkBtn/ParkBtn.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/SavedCard/SavedCard.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/UserNav/UserNav.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkInfo/ParkInfo.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/StateDropdown/StateDropdown.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/Banner/Banner.tsx",["96"],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/About/About.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/Contact/Contact.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/Location/Location.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/BannerIcons/BannerIcons.tsx",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":19,"column":6,"nodeType":"103","endLine":19,"endColumn":8,"suggestions":"104"},{"ruleId":"101","severity":1,"message":"105","line":25,"column":6,"nodeType":"103","endLine":25,"endColumn":25,"suggestions":"106"},{"ruleId":"101","severity":1,"message":"107","line":31,"column":6,"nodeType":"103","endLine":31,"endColumn":31,"suggestions":"108"},{"ruleId":"109","severity":1,"message":"110","line":101,"column":37,"nodeType":"111","messageId":"112","endLine":101,"endColumn":39},{"ruleId":"109","severity":1,"message":"110","line":113,"column":37,"nodeType":"111","messageId":"112","endLine":113,"endColumn":39},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"113","line":29,"column":6,"nodeType":"103","endLine":29,"endColumn":34,"suggestions":"114"},{"ruleId":"101","severity":1,"message":"115","line":16,"column":3,"nodeType":"116","endLine":16,"endColumn":12,"suggestions":"117"},{"ruleId":"101","severity":1,"message":"118","line":17,"column":6,"nodeType":"103","endLine":17,"endColumn":19,"suggestions":"119"},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'retrieveFromStorage'. Either include it or remove the dependency array.","ArrayExpression",["122"],"React Hook useEffect has a missing dependency: 'generateRandomParkCode'. Either include it or remove the dependency array.",["123"],"React Hook useEffect has missing dependencies: 'saveToStorage', 'updateLocalBucketListParks', and 'updateLocalVisitedParks'. Either include them or remove the dependency array.",["124"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'filterButtons'. Either include it or remove the dependency array.",["125"],"React Hook useEffect contains a call to 'setParkList'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [location.pathname, visitedList, bucketList] as a second argument to the useEffect Hook.","Identifier",["126"],"React Hook useEffect has missing dependencies: 'imageIndex' and 'images'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setDisplayImage' needs the current value of 'imageIndex'.",["127"],"no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},"Update the dependencies array to be: [retrieveFromStorage]",{"range":"140","text":"141"},"Update the dependencies array to be: [generateRandomParkCode, location.pathname]",{"range":"142","text":"143"},"Update the dependencies array to be: [visitedList, bucketList, updateLocalVisitedParks, updateLocalBucketListParks, saveToStorage]",{"range":"144","text":"145"},"Update the dependencies array to be: [filterButtons, nameSearch, stateSelection]",{"range":"146","text":"147"},"Add dependencies array: [location.pathname, visitedList, bucketList]",{"range":"148","text":"149"},"Update the dependencies array to be: [currentPark, imageIndex, images]",{"range":"150","text":"151"},[757,759],"[retrieveFromStorage]",[862,881],"[generateRandomParkCode, location.pathname]",[992,1017],"[visitedList, bucketList, updateLocalVisitedParks, updateLocalBucketListParks, saveToStorage]",[1062,1090],"[filterButtons, nameSearch, stateSelection]",[995,995],", [location.pathname, visitedList, bucketList]",[704,717],"[currentPark, imageIndex, images]"]