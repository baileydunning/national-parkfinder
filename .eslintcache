[{"/Users/bailey/turing/3mod/projects/national-parkfinder/src/index.js":"1","/Users/bailey/turing/3mod/projects/national-parkfinder/src/App/App.tsx":"2","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkData.js":"3","/Users/bailey/turing/3mod/projects/national-parkfinder/src/MainNav/MainNav.tsx":"4","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkContainer/ParkContainer.tsx":"5","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkContainer/npsApiCall.js":"6","/Users/bailey/turing/3mod/projects/national-parkfinder/src/UserNav/UserNav.tsx":"7","/Users/bailey/turing/3mod/projects/national-parkfinder/src/NavSearch/NavSearch.tsx":"8","/Users/bailey/turing/3mod/projects/national-parkfinder/src/Banner/Banner.tsx":"9","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkList/ParkList.tsx":"10","/Users/bailey/turing/3mod/projects/national-parkfinder/src/SavedParks/SavedParks.tsx":"11","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkInfo/ParkInfo.tsx":"12","/Users/bailey/turing/3mod/projects/national-parkfinder/src/BannerIcons/BannerIcons.tsx":"13","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkBtn/ParkBtn.tsx":"14"},{"size":326,"mtime":1610069344488,"results":"15","hashOfConfig":"16"},{"size":1005,"mtime":1610067659094,"results":"17","hashOfConfig":"16"},{"size":11659,"mtime":1610067659096,"results":"18","hashOfConfig":"16"},{"size":918,"mtime":1610067659094,"results":"19","hashOfConfig":"16"},{"size":1576,"mtime":1610069194009,"results":"20","hashOfConfig":"16"},{"size":264,"mtime":1610067659096,"results":"21","hashOfConfig":"16"},{"size":222,"mtime":1610057039945,"results":"22","hashOfConfig":"16"},{"size":302,"mtime":1610057039942,"results":"23","hashOfConfig":"16"},{"size":593,"mtime":1610067659094,"results":"24","hashOfConfig":"16"},{"size":723,"mtime":1610067659097,"results":"25","hashOfConfig":"16"},{"size":140,"mtime":1610068704123,"results":"26","hashOfConfig":"16"},{"size":538,"mtime":1610068731706,"results":"27","hashOfConfig":"16"},{"size":895,"mtime":1610057039939,"results":"28","hashOfConfig":"16"},{"size":531,"mtime":1610067659095,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2r4utd",{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"41","messages":"42","errorCount":3,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"35"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"35"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"35"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"/Users/bailey/turing/3mod/projects/national-parkfinder/src/index.js",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/App/App.tsx",["64","65","66"],"import './App.scss'\nimport React, { useState, useEffect } from 'react'\nimport MainNav from '../MainNav/MainNav'\nimport ParkContainer from '../ParkContainer/ParkContainer'\n// import { Route } from 'react-router-dom'\nimport { nationalParks } from '../ParkData'\nimport { parkRequest } from '../ParkContainer/npsApiCall'\n\ninterface ChoosePark {\n  choosePark: (parkCode: string) => void\n}\n\ninterface Park {\n  parkCode: string;\n}\n\nconst App: React.FC = () => {\n  const [parkCode, setParkCode] = useState('')\n  \n  const choosePark = (parkCodeId: string) => {\n   setParkCode(parkCodeId)\n  }\n\n  const generateRandomParkCode = () => {\n    let index = Math.floor(Math.random() * nationalParks.length)\n    setParkCode(nationalParks[index].parkCode)\n  }\n\n  useEffect(() => {\n    if (parkCode === '') {\n      generateRandomParkCode()\n    }\n  }, [parkCode])\n\n  return (\n    <main className=\"body\">\n      <MainNav choosePark={choosePark}/>\n      <ParkContainer parkCode={parkCode}/>\n    </main>\n  )\n}\n\nexport default App\n",["67","68"],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkData.js",[],["69","70"],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/MainNav/MainNav.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkContainer/ParkContainer.tsx",["71","72","73","74","75","76","77","78"],"import { useState, useEffect, Fragment } from 'react'\nimport Banner from '../Banner/Banner'\nimport UserNav from '../UserNav/UserNav'\nimport ParkInfo from '../ParkInfo/ParkInfo'\nimport SavedParks from '../SavedParks/SavedParks'\nimport { ParkCode, CurrentPark } from '../interfaces'\nimport { parkRequest } from './npsApiCall'\nimport { render } from \"react-dom\"\nimport { Router, RouteComponentProps, Link } from \"@reach/router\"\nimport './ParkContainer.scss'\n\ntype ParkContainerProps = ParkCode | CurrentPark\n\nconst ParkContainer: React.FC<ParkContainerProps> = props => {\n  let ParkInfo = (props: RouteComponentProps) => <div>Home</div>\n  let Dash = (props: RouteComponentProps) => <div>Dash</div>\n\n  const [currentPark, setCurrentPark] = useState<CurrentPark>()\n  const { parkCode } = props as ParkCode\n  \n  useEffect(() => {\n    if (parkCode !== '') {\n      parkRequest(parkCode)\n      .then(data => setCurrentPark(data.data[0]))    \n      .catch(error => setCurrentPark(error.message))\n    } \n  }, [parkCode])\n\n  return (\n    <section>\n      {currentPark && \n        <Switch>\n          <Fragment>\n            <Banner \n              currentPark={currentPark} />\n            <UserNav />\n        <Route\n          path='/:parkCode'\n          render={() => {\n            <ParkInfo \n              currentPark={currentPark} />\n          }}\n        />\n          <Route\n            path='/:savedParks'\n            render={() => {\n              <SavedParks />\n            }}\n          />\n          </Fragment>\n        </Switch>\n      }\n    </section>\n  )\n}\n\nexport default ParkContainer","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkContainer/npsApiCall.js",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/UserNav/UserNav.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/NavSearch/NavSearch.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/Banner/Banner.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkList/ParkList.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/SavedParks/SavedParks.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkInfo/ParkInfo.tsx",["79"],"import './ParkInfo.scss'\nimport About from '../About/About'\n// import { Switch, Route } from 'react-router-dom'\nimport { CurrentParkContainer } from '../interfaces'\n\nconst ParkInfo: React.FC<CurrentParkContainer> = props => {\n    const { currentPark } = props as CurrentParkContainer\n    return (\n        <section>\n            {/* <About /> */}\n            <p><b>About {currentPark.name}:</b>{currentPark.description}</p>\n            <p><b>Weather Info:</b>{currentPark.weatherInfo}</p>\n        </section>\n    )\n}\n\nexport default ParkInfo","/Users/bailey/turing/3mod/projects/national-parkfinder/src/BannerIcons/BannerIcons.tsx",["80","81"],"import './BannerIcons.scss'\nimport bucketBlack from './icons/bucket-black.png'\nimport bucketGreen from './icons/bucket-green.png'\nimport checkBlack from './icons/check-black.png'\nimport checkGreen from './icons/check-green.png'\n\nfunction BannerIcons() {\n    return (\n        <section className=\"banner-icons\">\n            <div className=\"banner-btn-container\">\n            <img \n                src={checkBlack}\n                alt=\"not checked\"\n                className=\"saved-icon\"\n            />\n            <h2>Add To Visited</h2>\n            </div>\n            <div className=\"banner-btn-container\">\n                <img\n                    src={bucketBlack}\n                    alt=\"not added to bucket list\"\n                    className=\"saved-icon\"\n                />\n                <h2>Add To Bucket List</h2>\n            </div>\n        </section>\n    )\n}\n\nexport default BannerIcons","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkBtn/ParkBtn.tsx",[],{"ruleId":"82","severity":1,"message":"83","line":7,"column":10,"nodeType":"84","messageId":"85","endLine":7,"endColumn":21},{"ruleId":"82","severity":1,"message":"86","line":9,"column":11,"nodeType":"84","messageId":"85","endLine":9,"endColumn":21},{"ruleId":"82","severity":1,"message":"87","line":13,"column":11,"nodeType":"84","messageId":"85","endLine":13,"endColumn":15},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"82","severity":1,"message":"92","line":4,"column":8,"nodeType":"84","messageId":"85","endLine":4,"endColumn":16},{"ruleId":"82","severity":1,"message":"93","line":8,"column":10,"nodeType":"84","messageId":"85","endLine":8,"endColumn":16},{"ruleId":"82","severity":1,"message":"94","line":9,"column":10,"nodeType":"84","messageId":"85","endLine":9,"endColumn":16},{"ruleId":"82","severity":1,"message":"95","line":9,"column":39,"nodeType":"84","messageId":"85","endLine":9,"endColumn":43},{"ruleId":"82","severity":1,"message":"96","line":16,"column":7,"nodeType":"84","messageId":"85","endLine":16,"endColumn":11},{"ruleId":"97","severity":2,"message":"98","line":32,"column":10,"nodeType":"99","endLine":32,"endColumn":16},{"ruleId":"97","severity":2,"message":"100","line":37,"column":10,"nodeType":"99","endLine":37,"endColumn":15},{"ruleId":"97","severity":2,"message":"100","line":44,"column":12,"nodeType":"99","endLine":44,"endColumn":17},{"ruleId":"82","severity":1,"message":"101","line":2,"column":8,"nodeType":"84","messageId":"85","endLine":2,"endColumn":13},{"ruleId":"82","severity":1,"message":"102","line":3,"column":8,"nodeType":"84","messageId":"85","endLine":3,"endColumn":19},{"ruleId":"82","severity":1,"message":"103","line":5,"column":8,"nodeType":"84","messageId":"85","endLine":5,"endColumn":18},"@typescript-eslint/no-unused-vars","'parkRequest' is defined but never used.","Identifier","unusedVar","'ChoosePark' is defined but never used.","'Park' is defined but never used.","no-native-reassign",["104"],"no-negated-in-lhs",["105"],"'ParkInfo' is defined but never used.","'render' is defined but never used.","'Router' is defined but never used.","'Link' is defined but never used.","'Dash' is assigned a value but never used.","react/jsx-no-undef","'Switch' is not defined.","JSXIdentifier","'Route' is not defined.","'About' is defined but never used.","'bucketGreen' is defined but never used.","'checkGreen' is defined but never used.","no-global-assign","no-unsafe-negation"]