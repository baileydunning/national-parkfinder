[{"/Users/bailey/turing/3mod/projects/national-parkfinder/src/index.js":"1","/Users/bailey/turing/3mod/projects/national-parkfinder/src/App/App.tsx":"2","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkData.js":"3","/Users/bailey/turing/3mod/projects/national-parkfinder/src/MainNav/MainNav.tsx":"4","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkContainer/ParkContainer.tsx":"5","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkContainer/npsApiCall.js":"6","/Users/bailey/turing/3mod/projects/national-parkfinder/src/NavSearch/NavSearch.tsx":"7","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkList/ParkList.tsx":"8","/Users/bailey/turing/3mod/projects/national-parkfinder/src/UserNav/UserNav.tsx":"9","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkInfo/ParkInfo.tsx":"10","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkBtn/ParkBtn.tsx":"11","/Users/bailey/turing/3mod/projects/national-parkfinder/src/Banner/Banner.tsx":"12","/Users/bailey/turing/3mod/projects/national-parkfinder/src/VisitedParks/VisitedParks.tsx":"13","/Users/bailey/turing/3mod/projects/national-parkfinder/src/About/About.tsx":"14","/Users/bailey/turing/3mod/projects/national-parkfinder/src/Location/Location.tsx":"15","/Users/bailey/turing/3mod/projects/national-parkfinder/src/Contact/Contact.tsx":"16","/Users/bailey/turing/3mod/projects/national-parkfinder/src/BannerIcons/BannerIcons.tsx":"17","/Users/bailey/turing/3mod/projects/national-parkfinder/src/SavedCard/SavedCard.tsx":"18"},{"size":322,"mtime":1610138614066,"results":"19","hashOfConfig":"20"},{"size":1234,"mtime":1610220503906,"results":"21","hashOfConfig":"20"},{"size":12759,"mtime":1610217698974,"results":"22","hashOfConfig":"20"},{"size":2483,"mtime":1610218912658,"results":"23","hashOfConfig":"20"},{"size":2803,"mtime":1610220572672,"results":"24","hashOfConfig":"20"},{"size":264,"mtime":1610160795201,"results":"25","hashOfConfig":"20"},{"size":747,"mtime":1610160795199,"results":"26","hashOfConfig":"20"},{"size":718,"mtime":1610160795203,"results":"27","hashOfConfig":"20"},{"size":663,"mtime":1610138614065,"results":"28","hashOfConfig":"20"},{"size":1300,"mtime":1610160795202,"results":"29","hashOfConfig":"20"},{"size":638,"mtime":1610160786505,"results":"30","hashOfConfig":"20"},{"size":941,"mtime":1610220663156,"results":"31","hashOfConfig":"20"},{"size":603,"mtime":1610219806058,"results":"32","hashOfConfig":"20"},{"size":635,"mtime":1610160795195,"results":"33","hashOfConfig":"20"},{"size":681,"mtime":1610160795197,"results":"34","hashOfConfig":"20"},{"size":1143,"mtime":1610160795196,"results":"35","hashOfConfig":"20"},{"size":1474,"mtime":1610220685529,"results":"36","hashOfConfig":"20"},{"size":321,"mtime":1610219766440,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2r4utd",{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"47"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"47"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"47"},"/Users/bailey/turing/3mod/projects/national-parkfinder/src/index.js",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/App/App.tsx",["80"],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkData.js",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/MainNav/MainNav.tsx",["81","82"],"import { useState, useEffect } from 'react'\nimport './MainNav.scss';\nimport NavSearch from '../NavSearch/NavSearch'\nimport ParkList from '../ParkList/ParkList'\nimport parkfinderLogo from './landscape.png'\nimport { nationalParks } from '../ParkData'\nimport ParkBtn from '../ParkBtn/ParkBtn'\nimport { LocalParkData } from '../interfaces'\nimport { Link } from 'react-router-dom'\n\ninterface ChoosePark {\n  choosePark: (parkCode: string) => void\n}\n\ninterface FilterButtonsByName {\n  filterButtonsByName: (searchTerm: string) => void\n}\n\ninterface GenerateRandomParkCode {\n  generateRandomParkCode: () => void\n}\n\ninterface ParksOnDisplay {\n  parks: Array<LocalParkData>\n}\n\ntype NavProps = ChoosePark | LocalParkData | FilterButtonsByName | GenerateRandomParkCode\n\nconst MainNav: React.FC<NavProps> = (props) => {\n  const { choosePark } = props as ChoosePark\n  const { generateRandomParkCode } = props as GenerateRandomParkCode\n  const [nameSearch, setNameSearch] = useState<string>('')\n  const [parksOnDisplay, setParksOnDisplay] = useState<Array<JSX.Element>>()\n\n  useEffect(() => {\n    if (!nameSearch) {\n      createNavBtns(nationalParks)\n    }\n  }, [nameSearch])\n\n  const createNavBtns = (parks: Array<LocalParkData>): void => {\n    const parkButtons = parks.map(park => {\n      return <ParkBtn\n        key={park.parkCode}\n        name={park.name}\n        parkCode={park.parkCode}\n        choosePark={choosePark}\n      />\n    })\n    setParksOnDisplay(parkButtons)\n  }\n\n  const filterButtonsByName = (searchTerm: string) => {\n    setNameSearch(searchTerm)\n    const filteredParks = nationalParks.filter(park => {\n      return park.name.toLowerCase().includes(searchTerm.toLowerCase())\n    })\n    createNavBtns(filteredParks)\n  }\n\n  return (\n    <nav className=\"main-nav\">\n      <img\n        className=\"logo\"\n        src={parkfinderLogo}\n        alt=\"National Parkfinder Logo\"\n      />\n      <h1>National Parkfinder</h1>\n      <NavSearch\n        filterButtonsByName={ filterButtonsByName }\n      />\n      <ParkList\n        generateRandomParkCode={ generateRandomParkCode }\n        parksOnDisplay={parksOnDisplay}\n      />\n      <div className=\"main-nav-saved-btn-container\">\n        <Link\n        to='/user/visited'>\n            <button className=\"main-nav-saved-btn\">Visited</button>\n        </Link>\n        <Link\n          to=\"/user/bucket-list\">\n          <button className=\"main-nav-saved-btn\">Bucket List</button>\n        </Link>\n      </div>\n    </nav>\n  )\n}\n\nexport default MainNav",["83","84"],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkContainer/ParkContainer.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkContainer/npsApiCall.js",[],["85","86"],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/NavSearch/NavSearch.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkList/ParkList.tsx",["87"],"import './ParkList.scss'\n\ninterface ChoosePark {\n  choosePark: (parkCode: string) => void;\n}\n\ninterface ParksOnDisplay {\n   parksOnDisplay: Array<object>\n}\n\ninterface GenerateRandomParkCode {\n  generateRandomParkCode: () => void\n}\n\ntype ParkListProps = GenerateRandomParkCode | ParksOnDisplay\n\nconst ParkList: React.FC<ParkListProps> = props => {\n  const { generateRandomParkCode } = props as GenerateRandomParkCode\n  const { parksOnDisplay } = props as ParksOnDisplay\n\n  return (\n    <section className=\"park-list\">\n      <button \n        className=\"park-button\"\n        onClick={() => generateRandomParkCode()}>\n          randomize\n      </button>\n      {parksOnDisplay}\n    </section>\n  )\n}\n\nexport default ParkList","/Users/bailey/turing/3mod/projects/national-parkfinder/src/UserNav/UserNav.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkInfo/ParkInfo.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkBtn/ParkBtn.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/Banner/Banner.tsx",["88"],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/VisitedParks/VisitedParks.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/About/About.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/Location/Location.tsx",["89"],"import { CurrentParkContainer } from '../interfaces'\nimport './Location.scss'\n\nconst Location: React.FC<CurrentParkContainer> = props => {\n  const { currentPark } = props as CurrentParkContainer \n    return (\n      <section>\n        <p><b>Driving directions to {currentPark.name}: </b>{currentPark.directionsInfo}</p>\n        <iframe \n            src={`https://www.google.com/maps/embed?pb=!1m14!1m12!1m3!1d196281.64169563106!2d${currentPark.longitude}!3d${currentPark.latitude}!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!5e0!3m2!1sen!2sus!4v1610139788967!5m2!1sen!2sus`} \n            width = \"800\" height = \"200\">\n        </iframe >\n      </section>\n    )\n}\n\nexport default Location\n","/Users/bailey/turing/3mod/projects/national-parkfinder/src/Contact/Contact.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/BannerIcons/BannerIcons.tsx",["90","91","92"],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/SavedCard/SavedCard.tsx",["93"],"import { LocalParkData } from '../interfaces'\n\nconst SavedCard: React.FC<LocalParkData> = (props) => {\n  const { name } = props as LocalParkData\n  const { image } = props as LocalParkData\n  // const { key } = props as LocalParkData\n\n  return (\n    <div>\n      <h1>{name}</h1>\n    </div>\n  )\n  \n}\n\nexport default SavedCard",{"ruleId":"94","severity":1,"message":"95","line":21,"column":6,"nodeType":"96","endLine":21,"endColumn":16,"suggestions":"97"},{"ruleId":"98","severity":1,"message":"99","line":23,"column":11,"nodeType":"100","messageId":"101","endLine":23,"endColumn":25},{"ruleId":"94","severity":1,"message":"102","line":39,"column":6,"nodeType":"96","endLine":39,"endColumn":18,"suggestions":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"98","severity":1,"message":"108","line":3,"column":11,"nodeType":"100","messageId":"101","endLine":3,"endColumn":21},{"ruleId":"98","severity":1,"message":"109","line":2,"column":52,"nodeType":"100","messageId":"101","endLine":2,"endColumn":65},{"ruleId":"110","severity":1,"message":"111","line":9,"column":9,"nodeType":"112","endLine":11,"endColumn":42},{"ruleId":"98","severity":1,"message":"113","line":4,"column":8,"nodeType":"100","messageId":"101","endLine":4,"endColumn":19},{"ruleId":"98","severity":1,"message":"114","line":6,"column":8,"nodeType":"100","messageId":"101","endLine":6,"endColumn":18},{"ruleId":"98","severity":1,"message":"115","line":17,"column":11,"nodeType":"100","messageId":"101","endLine":17,"endColumn":22},{"ruleId":"98","severity":1,"message":"116","line":5,"column":11,"nodeType":"100","messageId":"101","endLine":5,"endColumn":16},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'location.pathname'. Either include it or remove the dependency array.","ArrayExpression",["117"],"@typescript-eslint/no-unused-vars","'ParksOnDisplay' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'createNavBtns'. Either include it or remove the dependency array.",["118"],"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"'ChoosePark' is defined but never used.","'LocalParkData' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'bucketGreen' is defined but never used.","'checkGreen' is defined but never used.","'currentPark' is assigned a value but never used.","'image' is assigned a value but never used.",{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [location.pathname, parkCode]",{"range":"125","text":"126"},"Update the dependencies array to be: [createNavBtns, nameSearch]",{"range":"127","text":"128"},[638,648],"[location.pathname, parkCode]",[1146,1158],"[createNavBtns, nameSearch]"]