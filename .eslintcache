[{"/Users/jpcarey/turing/3module/projects/national-parkfinder/src/index.js":"1","/Users/jpcarey/turing/3module/projects/national-parkfinder/src/App/App.tsx":"2","/Users/jpcarey/turing/3module/projects/national-parkfinder/src/ParkData.js":"3","/Users/jpcarey/turing/3module/projects/national-parkfinder/src/ParkContainer/ParkContainer.tsx":"4","/Users/jpcarey/turing/3module/projects/national-parkfinder/src/MainNav/MainNav.tsx":"5","/Users/jpcarey/turing/3module/projects/national-parkfinder/src/ParkContainer/npsApiCall.js":"6","/Users/jpcarey/turing/3module/projects/national-parkfinder/src/UserNav/UserNav.tsx":"7","/Users/jpcarey/turing/3module/projects/national-parkfinder/src/ParkInfo/ParkInfo.tsx":"8","/Users/jpcarey/turing/3module/projects/national-parkfinder/src/Banner/Banner.tsx":"9","/Users/jpcarey/turing/3module/projects/national-parkfinder/src/ParkBtn/ParkBtn.tsx":"10","/Users/jpcarey/turing/3module/projects/national-parkfinder/src/NavSearch/NavSearch.tsx":"11","/Users/jpcarey/turing/3module/projects/national-parkfinder/src/ParkList/ParkList.tsx":"12","/Users/jpcarey/turing/3module/projects/national-parkfinder/src/Location/Location.tsx":"13","/Users/jpcarey/turing/3module/projects/national-parkfinder/src/Contact/Contact.tsx":"14","/Users/jpcarey/turing/3module/projects/national-parkfinder/src/About/About.tsx":"15","/Users/jpcarey/turing/3module/projects/national-parkfinder/src/BannerIcons/BannerIcons.tsx":"16","/Users/jpcarey/turing/3module/projects/national-parkfinder/src/SavedCard/SavedCard.tsx":"17","/Users/jpcarey/turing/3module/projects/national-parkfinder/src/interfaces.tsx":"18","/Users/jpcarey/turing/3module/projects/national-parkfinder/src/SavedParks/SavedParks.tsx":"19","/Users/jpcarey/turing/3module/projects/national-parkfinder/src/Footer/Footer.tsx":"20"},{"size":323,"mtime":1610303473217,"results":"21","hashOfConfig":"22"},{"size":1404,"mtime":1610303473192,"results":"23","hashOfConfig":"22"},{"size":13972,"mtime":1610303473208,"results":"24","hashOfConfig":"22"},{"size":4164,"mtime":1610303473205,"results":"25","hashOfConfig":"22"},{"size":2079,"mtime":1610316798362,"results":"26","hashOfConfig":"22"},{"size":264,"mtime":1610303473207,"results":"27","hashOfConfig":"22"},{"size":589,"mtime":1610303473216,"results":"28","hashOfConfig":"22"},{"size":1904,"mtime":1610303473210,"results":"29","hashOfConfig":"22"},{"size":865,"mtime":1610303473194,"results":"30","hashOfConfig":"22"},{"size":642,"mtime":1610316637058,"results":"31","hashOfConfig":"22"},{"size":686,"mtime":1610303473203,"results":"32","hashOfConfig":"22"},{"size":836,"mtime":1610311764426,"results":"33","hashOfConfig":"22"},{"size":643,"mtime":1610303473200,"results":"34","hashOfConfig":"22"},{"size":1122,"mtime":1610303473197,"results":"35","hashOfConfig":"22"},{"size":684,"mtime":1610303473189,"results":"36","hashOfConfig":"22"},{"size":2449,"mtime":1610303473197,"results":"37","hashOfConfig":"22"},{"size":1320,"mtime":1610303473213,"results":"38","hashOfConfig":"22"},{"size":1707,"mtime":1610254511297,"results":"39","hashOfConfig":"22"},{"size":1624,"mtime":1610303473214,"results":"40","hashOfConfig":"22"},{"size":482,"mtime":1610303473199,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1agcvs0",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/Users/jpcarey/turing/3module/projects/national-parkfinder/src/index.js",[],["88","89"],"/Users/jpcarey/turing/3module/projects/national-parkfinder/src/App/App.tsx",["90"],"import './App.scss'\nimport React, { useState, useEffect } from 'react'\nimport MainNav from '../MainNav/MainNav'\nimport ParkContainer from '../ParkContainer/ParkContainer'\nimport { Route, Switch, useLocation } from 'react-router-dom'\nimport { nationalParks } from '../ParkData'\nimport { parkRequest } from '../ParkContainer/npsApiCall'\n\nconst App: React.FC = () => {\n  const [parkCode, setParkCode] = useState('')\n  const location = useLocation()\n  const choosePark = (parkCodeId: string) => {\n   setParkCode(parkCodeId)\n  }\n\n  useEffect(() => {\n    if (location.pathname === '/') {\n      generateRandomParkCode()\n    } else {\n      setParkCode(location.pathname.split('/')[1])\n    }\n  }, [parkCode])\n\n  const generateRandomParkCode = (): void => {\n    let index = Math.floor(Math.random() * nationalParks.length)\n    setParkCode(nationalParks[index].parkCode)\n  }\n\n  return (\n    <main className=\"body\">\n      <MainNav \n        choosePark={choosePark}\n        generateRandomParkCode={generateRandomParkCode}/>\n      <Switch>\n        <Route\n          path={location.pathname}\n          render={ () => {\n            return (\n              <ParkContainer \n                parkCode={parkCode}/>\n            )\n          }}\n        />\n      </Switch>\n    </main>\n  )\n}\n\nexport default App\n",["91","92"],"/Users/jpcarey/turing/3module/projects/national-parkfinder/src/ParkData.js",[],"/Users/jpcarey/turing/3module/projects/national-parkfinder/src/ParkContainer/ParkContainer.tsx",[],"/Users/jpcarey/turing/3module/projects/national-parkfinder/src/MainNav/MainNav.tsx",["93"],"/Users/jpcarey/turing/3module/projects/national-parkfinder/src/ParkContainer/npsApiCall.js",[],"/Users/jpcarey/turing/3module/projects/national-parkfinder/src/UserNav/UserNav.tsx",[],"/Users/jpcarey/turing/3module/projects/national-parkfinder/src/ParkInfo/ParkInfo.tsx",[],"/Users/jpcarey/turing/3module/projects/national-parkfinder/src/Banner/Banner.tsx",[],"/Users/jpcarey/turing/3module/projects/national-parkfinder/src/ParkBtn/ParkBtn.tsx",["94"],"/Users/jpcarey/turing/3module/projects/national-parkfinder/src/NavSearch/NavSearch.tsx",[],"/Users/jpcarey/turing/3module/projects/national-parkfinder/src/ParkList/ParkList.tsx",[],"/Users/jpcarey/turing/3module/projects/national-parkfinder/src/Location/Location.tsx",["95"],"import { CurrentParkContainer } from '../interfaces'\nimport './Location.scss'\n\nconst Location: React.FC<CurrentParkContainer> = props => {\n  const { currentPark } = props as CurrentParkContainer \n    return (\n      <section>\n        <p><b>Driving directions to {currentPark.name}: </b>{currentPark.directionsInfo}</p>\n        <iframe \n            src={`https://www.google.com/maps/embed?pb=!1m14!1m12!1m3!1d196281.64169563106!2d${currentPark.longitude}!3d${currentPark.latitude}!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!5e0!3m2!1sen!2sus!4v1610139788967!5m2!1sen!2sus`} \n            width = \"800\" height = \"200\">\n        </iframe >\n      </section>\n    )\n}\n\nexport default Location\n","/Users/jpcarey/turing/3module/projects/national-parkfinder/src/Contact/Contact.tsx",[],"/Users/jpcarey/turing/3module/projects/national-parkfinder/src/About/About.tsx",[],"/Users/jpcarey/turing/3module/projects/national-parkfinder/src/BannerIcons/BannerIcons.tsx",["96"],"import './BannerIcons.scss'\nimport { useEffect, useState } from 'react'\nimport { AddRemoveFunctionality } from '../interfaces'\nimport bucketBlack from './icons/bucket-black.png'\nimport bucketGreen from './icons/bucket-green.png'\nimport checkBlack from './icons/check-black.png'\nimport checkGreen from './icons/check-green.png'\n\ntype BannerIconsProps = AddRemoveFunctionality | { localPark: () => any | void } \n\n\nconst BannerIcons: React.FC<BannerIconsProps> = props => {\n  const { addToVisited } = props as AddRemoveFunctionality\n  const { deleteFromVisited } = props as AddRemoveFunctionality\n  const { addToBucketList } = props as AddRemoveFunctionality\n  const { deleteFromBucketList } = props as AddRemoveFunctionality\n  const { localPark } = props as any\n\n  const [checkColor, setCheckColor] = useState<any>()\n  const [bucketColor, setBucketColor] = useState<any>()\n\n  useEffect(() => {\n    if (localPark.visited) {\n      setCheckColor(checkGreen)\n    } else {\n      setCheckColor(checkBlack)\n    }\n\n    if (localPark.bucketList) {\n      setBucketColor(bucketGreen)\n    } else {\n      setBucketColor(bucketBlack)\n    }\n  })\n\n  const handleVisitedPark = () => {\n    if (!localPark.visited) {\n      addToVisited(localPark.parkCode)\n      localPark.visited = true\n    } else {\n      deleteFromVisited(localPark.parkCode)\n      localPark.visited = false\n    }\n  }\n\n  const handleBucketListPark = () => {\n    if (!localPark.bucketList) {\n      addToBucketList(localPark.parkCode)\n      localPark.bucketList = true\n    } else {\n      deleteFromBucketList(localPark.parkCode)\n      localPark.bucketList = false\n    }\n  }\n\n  return (\n    <section className=\"banner-icons\">\n      <div role=\"button\"\n        onClick={ handleVisitedPark }\n        className=\"banner-btn-container\">\n        <img\n          src={checkColor}\n          alt=\"not checked\"\n          className=\"saved-icon\"\n        />\n        {!localPark.visited && <h2>Add To Visited</h2>}\n        {localPark.visited && <h2>Remove From Visited</h2>}\n      </div>\n      <div\n        role=\"button\"\n        onClick={ handleBucketListPark }\n        className=\"banner-btn-container\">\n        <img\n          src={bucketColor}\n          alt=\"not added to bucket list\"\n          className=\"saved-icon\"\n        />\n        {!localPark.bucketList && <h2>Add To Bucket List</h2>}\n        {localPark.bucketList && <h2>Remove From Bucket List</h2>}\n      </div>\n    </section>\n  )\n}\n\nexport default BannerIcons","/Users/jpcarey/turing/3module/projects/national-parkfinder/src/SavedCard/SavedCard.tsx",[],"/Users/jpcarey/turing/3module/projects/national-parkfinder/src/interfaces.tsx",[],"/Users/jpcarey/turing/3module/projects/national-parkfinder/src/SavedParks/SavedParks.tsx",["97"],"import { useEffect, useState } from 'react'\nimport { LocalParkContainer, LocalParkData, AddRemoveFunctionality } from '../interfaces'\nimport SavedCard from '../SavedCard/SavedCard'\nimport { useLocation } from 'react-router-dom'\n\ntype SavedParkProps = LocalParkContainer | LocalParkData | AddRemoveFunctionality\n\nconst SavedParks: React.FC<SavedParkProps> = props => {\n  const location = useLocation()\n  const { visitedList, bucketList} = props as LocalParkContainer\n  const { addToVisited, deleteFromVisited, addToBucketList, deleteFromBucketList } = props as AddRemoveFunctionality\n  const [visitedListDisplay, setVisitedListDisplay] = useState<Array<JSX.Element>>([])\n\n  useEffect(() => {\n    let parkList = []\n    if (location.pathname === '/user/visited') {\n      parkList = visitedList\n    } else if (location.pathname === '/user/bucket-list') {\n      parkList = bucketList\n    }\n      const visitedCards = parkList.map((savedPark: LocalParkData) => {\n        return <SavedCard\n          key={savedPark.parkCode}\n          name={savedPark.name}\n          image={savedPark.image}\n          parkCode={savedPark.parkCode}\n          state={savedPark.state}\n          bucketList={savedPark.bucketList}\n          visited={savedPark.visited}\n          addToVisited={addToVisited}\n          deleteFromVisited={deleteFromVisited}\n          addToBucketList={addToBucketList}\n          deleteFromBucketList={deleteFromBucketList}\n        />\n      })\n      setVisitedListDisplay(visitedCards)\n  }, [visitedList])\n\n  return (\n    <section id={location.pathname === '/user/visited' ? \"visited\" : \"bucket-list\"}>\n      {visitedListDisplay}\n    </section>\n  )\n}\n\nexport default SavedParks","/Users/jpcarey/turing/3module/projects/national-parkfinder/src/Footer/Footer.tsx",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":23,"column":6,"nodeType":"104","endLine":23,"endColumn":16,"suggestions":"105"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"106","line":34,"column":6,"nodeType":"104","endLine":34,"endColumn":18,"suggestions":"107"},{"ruleId":"108","severity":1,"message":"109","line":18,"column":7,"nodeType":"110","endLine":22,"endColumn":8},{"ruleId":"111","severity":1,"message":"112","line":9,"column":9,"nodeType":"110","endLine":11,"endColumn":42},{"ruleId":"102","severity":1,"message":"113","line":22,"column":3,"nodeType":"114","endLine":22,"endColumn":12,"suggestions":"115"},{"ruleId":"102","severity":1,"message":"116","line":35,"column":6,"nodeType":"104","endLine":35,"endColumn":19,"suggestions":"117"},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'location'. Either include it or remove the dependency array.","ArrayExpression",["120"],"React Hook useEffect has a missing dependency: 'createNavBtns'. Either include it or remove the dependency array.",["121"],"jsx-a11y/no-redundant-roles","The element button has an implicit role of button. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","React Hook useEffect contains a call to 'setCheckColor'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [localPark.visited, localPark.bucketList] as a second argument to the useEffect Hook.","Identifier",["122"],"React Hook useEffect has missing dependencies: 'bucketList' and 'location.pathname'. Either include them or remove the dependency array.",["123"],"no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},"Update the dependencies array to be: [location, parkCode]",{"range":"132","text":"133"},"Update the dependencies array to be: [createNavBtns, nameSearch]",{"range":"134","text":"135"},"Add dependencies array: [localPark.visited, localPark.bucketList]",{"range":"136","text":"137"},"Update the dependencies array to be: [bucketList, location.pathname, visitedList]",{"range":"138","text":"139"},[718,728],"[location, parkCode]",[1048,1060],"[createNavBtns, nameSearch]",[1127,1127],", [localPark.visited, localPark.bucketList]",[1358,1371],"[bucketList, location.pathname, visitedList]"]