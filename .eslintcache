[{"/Users/bailey/turing/3mod/projects/national-parkfinder/src/index.js":"1","/Users/bailey/turing/3mod/projects/national-parkfinder/src/App/App.tsx":"2","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkData.js":"3","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkContainer/ParkContainer.tsx":"4","/Users/bailey/turing/3mod/projects/national-parkfinder/src/MainNav/MainNav.tsx":"5","/Users/bailey/turing/3mod/projects/national-parkfinder/src/Footer/Footer.tsx":"6","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkContainer/npsApiCall.js":"7","/Users/bailey/turing/3mod/projects/national-parkfinder/src/Banner/Banner.tsx":"8","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkInfo/ParkInfo.tsx":"9","/Users/bailey/turing/3mod/projects/national-parkfinder/src/UserNav/UserNav.tsx":"10","/Users/bailey/turing/3mod/projects/national-parkfinder/src/SavedParks/SavedParks.tsx":"11","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkBtn/ParkBtn.tsx":"12","/Users/bailey/turing/3mod/projects/national-parkfinder/src/NavSearch/NavSearch.tsx":"13","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkList/ParkList.tsx":"14","/Users/bailey/turing/3mod/projects/national-parkfinder/src/StateDropdown/StateDropdown.tsx":"15","/Users/bailey/turing/3mod/projects/national-parkfinder/src/About/About.tsx":"16","/Users/bailey/turing/3mod/projects/national-parkfinder/src/Location/Location.tsx":"17","/Users/bailey/turing/3mod/projects/national-parkfinder/src/Contact/Contact.tsx":"18","/Users/bailey/turing/3mod/projects/national-parkfinder/src/BannerIcons/BannerIcons.tsx":"19","/Users/bailey/turing/3mod/projects/national-parkfinder/src/SavedCard/SavedCard.tsx":"20"},{"size":323,"mtime":1610303893238,"results":"21","hashOfConfig":"22"},{"size":1611,"mtime":1611691684653,"results":"23","hashOfConfig":"22"},{"size":15801,"mtime":1610472195890,"results":"24","hashOfConfig":"22"},{"size":4377,"mtime":1611686706635,"results":"25","hashOfConfig":"22"},{"size":2427,"mtime":1611691958344,"results":"26","hashOfConfig":"22"},{"size":518,"mtime":1610472195885,"results":"27","hashOfConfig":"22"},{"size":264,"mtime":1610303893229,"results":"28","hashOfConfig":"22"},{"size":1139,"mtime":1611691873566,"results":"29","hashOfConfig":"22"},{"size":1919,"mtime":1611691736233,"results":"30","hashOfConfig":"22"},{"size":589,"mtime":1610303893237,"results":"31","hashOfConfig":"22"},{"size":1881,"mtime":1610497984733,"results":"32","hashOfConfig":"22"},{"size":558,"mtime":1611686717059,"results":"33","hashOfConfig":"22"},{"size":684,"mtime":1610494900968,"results":"34","hashOfConfig":"22"},{"size":836,"mtime":1610399277049,"results":"35","hashOfConfig":"22"},{"size":3245,"mtime":1611684437031,"results":"36","hashOfConfig":"22"},{"size":684,"mtime":1610303893218,"results":"37","hashOfConfig":"22"},{"size":702,"mtime":1610472195885,"results":"38","hashOfConfig":"22"},{"size":1245,"mtime":1610472195884,"results":"39","hashOfConfig":"22"},{"size":2496,"mtime":1610399277045,"results":"40","hashOfConfig":"22"},{"size":1465,"mtime":1611686736257,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"2r4utd",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"51"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"51"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"51"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"51"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"/Users/bailey/turing/3mod/projects/national-parkfinder/src/index.js",[],["88","89"],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/App/App.tsx",["90"],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkData.js",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkContainer/ParkContainer.tsx",[],["91","92"],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/MainNav/MainNav.tsx",["93"],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/Footer/Footer.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkContainer/npsApiCall.js",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/Banner/Banner.tsx",["94","95","96","97"],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkInfo/ParkInfo.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/UserNav/UserNav.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/SavedParks/SavedParks.tsx",["98"],"import { useEffect, useState } from 'react'\nimport { LocalParkContainer, LocalParkData, AddRemoveFunctionality } from '../interfaces'\nimport SavedCard from '../SavedCard/SavedCard'\nimport { useLocation } from 'react-router-dom'\nimport './SavedParks.scss'\n\nconst SavedParks: React.FC<LocalParkContainer & AddRemoveFunctionality> = props => {\n  const [pageTitle, setPageTitle] = useState<string>('My Parks')\n  const location = useLocation()\n  const { visitedList, bucketList } = props as LocalParkContainer\n  const { addToVisited, deleteFromVisited, addToBucketList, deleteFromBucketList } = props as AddRemoveFunctionality\n  const [visitedListDisplay, setVisitedListDisplay] = useState<Array<JSX.Element>>([])\n\n  useEffect(() => {\n    let parkList = []\n    if (location.pathname === '/user/visited') {\n      parkList = visitedList\n      setPageTitle('My Visited Parks')\n    } else if (location.pathname === '/user/bucket-list') {\n      parkList = bucketList\n      setPageTitle('My Bucket List Parks')\n    }\n      const visitedCards = parkList.map((savedPark: LocalParkData) => {\n        return <SavedCard\n          key={savedPark.parkCode}\n          name={savedPark.name}\n          image={savedPark.image}\n          parkCode={savedPark.parkCode}\n          state={savedPark.state}\n          bucketList={savedPark.bucketList}\n          visited={savedPark.visited}\n          addToVisited={addToVisited}\n          deleteFromVisited={deleteFromVisited}\n          addToBucketList={addToBucketList}\n          deleteFromBucketList={deleteFromBucketList}\n        />\n      })\n      setVisitedListDisplay(visitedCards)\n  }, [visitedList, bucketList])\n\n  return (\n    <section>\n      <h1 style={{textAlign: \"center\"}}>\n        {pageTitle}\n      </h1>\n      <section className=\"saved-parks-container\">\n        {visitedListDisplay}\n      </section>\n    </section>\n  )\n}\n\nexport default SavedParks","/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkBtn/ParkBtn.tsx",["99"],"import './ParkBtn.scss'\nimport { LocalParkData } from '../interfaces'\nimport { Link } from 'react-router-dom'\n\n\ntype ParkBtnProps = LocalParkData\n\nconst ParkBtn: React.FC<ParkBtnProps> = props => {\n  const { name } = props as LocalParkData\n  const { parkCode } = props as LocalParkData\n\n  return (\n    <Link\n      data-testid={`${parkCode} button`}\n      to={`/park/${parkCode}/about`}\n      className=\"main-nav-link\"\n      >\n      <button\n        role=\"button\"\n        className=\"park-button\"\n      >{name}</button>\n    </Link>\n  )\n}\n\nexport default ParkBtn","/Users/bailey/turing/3mod/projects/national-parkfinder/src/NavSearch/NavSearch.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/ParkList/ParkList.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/StateDropdown/StateDropdown.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/About/About.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/Location/Location.tsx",["100"],"import { CurrentParkContainer } from '../interfaces'\nimport './Location.scss'\n\nconst Location: React.FC<CurrentParkContainer> = props => {\n  const { currentPark } = props as CurrentParkContainer\n  return (\n    <section>\n      <p><b>Driving directions to {currentPark.name}: </b>{currentPark.directionsInfo}</p>\n      <div className='map-container'>\n        <iframe\n          src={`https://www.google.com/maps/embed?pb=!1m14!1m12!1m3!1d196281.64169563106!2d${currentPark.longitude}!3d${currentPark.latitude}!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!5e0!3m2!1sen!2sus!4v1610139788967!5m2!1sen!2sus`}\n          className='map'>\n        </iframe >\n      </div>\n    </section>\n  )\n}\n\nexport default Location\n","/Users/bailey/turing/3mod/projects/national-parkfinder/src/Contact/Contact.tsx",[],"/Users/bailey/turing/3mod/projects/national-parkfinder/src/BannerIcons/BannerIcons.tsx",["101"],"import './BannerIcons.scss'\nimport { useEffect, useState } from 'react'\nimport { AddRemoveFunctionality } from '../interfaces'\nimport bucketBlack from './icons/bucket-black.png'\nimport bucketGreen from './icons/bucket-green.png'\nimport checkBlack from './icons/check-black.png'\nimport checkGreen from './icons/check-green.png'\n\ntype BannerIconsProps = AddRemoveFunctionality | { localPark: () => any | void } \n\n\nconst BannerIcons: React.FC<BannerIconsProps> = props => {\n  const { addToVisited } = props as AddRemoveFunctionality\n  const { deleteFromVisited } = props as AddRemoveFunctionality\n  const { addToBucketList } = props as AddRemoveFunctionality\n  const { deleteFromBucketList } = props as AddRemoveFunctionality\n  const { localPark } = props as any\n\n  const [checkColor, setCheckColor] = useState<any>()\n  const [bucketColor, setBucketColor] = useState<any>()\n\n  useEffect(() => {\n    if (localPark.visited) {\n      setCheckColor(checkGreen)\n    } else {\n      setCheckColor(checkBlack)\n    }\n\n    if (localPark.bucketList) {\n      setBucketColor(bucketGreen)\n    } else {\n      setBucketColor(bucketBlack)\n    }\n  })\n\n  const handleVisitedPark = () => {\n    if (!localPark.visited) {\n      addToVisited(localPark.parkCode)\n      localPark.visited = true\n    } else {\n      deleteFromVisited(localPark.parkCode)\n      localPark.visited = false\n    }\n  }\n\n  const handleBucketListPark = () => {\n    if (!localPark.bucketList) {\n      addToBucketList(localPark.parkCode)\n      localPark.bucketList = true\n    } else {\n      deleteFromBucketList(localPark.parkCode)\n      localPark.bucketList = false\n    }\n  }\n\n  return (\n    <section className=\"banner-icons\">\n      <div role=\"button\"\n        data-testid=\"visited\"\n        onClick={ handleVisitedPark }\n        className=\"banner-btn-container\">\n        <img\n          src={checkColor}\n          alt=\"visited\"\n          className=\"saved-icon\"\n        />\n        {!localPark.visited && <h2>Add To Visited</h2>}\n        {localPark.visited && <h2>Remove From Visited</h2>}\n      </div>\n      <div\n        data-testid=\"bucket-list\"\n        role=\"button\"\n        onClick={ handleBucketListPark }\n        className=\"banner-btn-container\">\n        <img\n          src={bucketColor}\n          alt=\"bucket list\"\n          className=\"saved-icon\"\n        />\n        {!localPark.bucketList && <h2>Add To Bucket List</h2>}\n        {localPark.bucketList && <h2>Remove From Bucket List</h2>}\n      </div>\n    </section>\n  )\n}\n\nexport default BannerIcons","/Users/bailey/turing/3mod/projects/national-parkfinder/src/SavedCard/SavedCard.tsx",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":36,"column":19,"nodeType":"108","messageId":"109","endLine":36,"endColumn":27},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"110","severity":1,"message":"111","line":29,"column":6,"nodeType":"112","endLine":29,"endColumn":34,"suggestions":"113"},{"ruleId":"106","severity":1,"message":"114","line":9,"column":10,"nodeType":"108","messageId":"109","endLine":9,"endColumn":22},{"ruleId":"106","severity":1,"message":"115","line":9,"column":24,"nodeType":"108","messageId":"109","endLine":9,"endColumn":39},{"ruleId":"106","severity":1,"message":"116","line":10,"column":9,"nodeType":"108","messageId":"109","endLine":10,"endColumn":28},{"ruleId":"106","severity":1,"message":"117","line":12,"column":9,"nodeType":"108","messageId":"109","endLine":12,"endColumn":18},{"ruleId":"110","severity":1,"message":"118","line":39,"column":6,"nodeType":"112","endLine":39,"endColumn":31,"suggestions":"119"},{"ruleId":"120","severity":1,"message":"121","line":18,"column":7,"nodeType":"122","endLine":21,"endColumn":8},{"ruleId":"123","severity":1,"message":"124","line":10,"column":9,"nodeType":"122","endLine":12,"endColumn":27},{"ruleId":"110","severity":1,"message":"125","line":22,"column":3,"nodeType":"108","endLine":22,"endColumn":12,"suggestions":"126"},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"@typescript-eslint/no-unused-vars","'parkCode' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filterButtons'. Either include it or remove the dependency array.","ArrayExpression",["129"],"'displayImage' is assigned a value but never used.","'setDisplayImage' is assigned a value but never used.","'randomIndex' is assigned a value but never used.","'nextImage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'addToBucketList', 'addToVisited', 'deleteFromBucketList', 'deleteFromVisited', and 'location.pathname'. Either include them or remove the dependency array.",["130"],"jsx-a11y/no-redundant-roles","The element button has an implicit role of button. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","React Hook useEffect contains a call to 'setCheckColor'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [localPark.visited, localPark.bucketList] as a second argument to the useEffect Hook.",["131"],"no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},"Update the dependencies array to be: [filterButtons, nameSearch, stateSelection]",{"range":"138","text":"139"},"Update the dependencies array to be: [visitedList, bucketList, location.pathname, addToVisited, deleteFromVisited, addToBucketList, deleteFromBucketList]",{"range":"140","text":"141"},"Add dependencies array: [localPark.visited, localPark.bucketList]",{"range":"142","text":"143"},[1062,1090],"[filterButtons, nameSearch, stateSelection]",[1612,1637],"[visitedList, bucketList, location.pathname, addToVisited, deleteFromVisited, addToBucketList, deleteFromBucketList]",[1127,1127],", [localPark.visited, localPark.bucketList]"]